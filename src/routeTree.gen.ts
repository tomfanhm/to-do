/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PathlessLayoutImport } from './routes/_pathlessLayout'
import { Route as PathlessLayoutIndexImport } from './routes/_pathlessLayout/index'
import { Route as PathlessLayoutauthRegisterImport } from './routes/_pathlessLayout/(auth)/register'
import { Route as PathlessLayoutauthLoginImport } from './routes/_pathlessLayout/(auth)/login'

// Create/Update Routes

const PathlessLayoutRoute = PathlessLayoutImport.update({
  id: '/_pathlessLayout',
  getParentRoute: () => rootRoute,
} as any)

const PathlessLayoutIndexRoute = PathlessLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PathlessLayoutRoute,
} as any)

const PathlessLayoutauthRegisterRoute = PathlessLayoutauthRegisterImport.update(
  {
    id: '/(auth)/register',
    path: '/register',
    getParentRoute: () => PathlessLayoutRoute,
  } as any,
)

const PathlessLayoutauthLoginRoute = PathlessLayoutauthLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => PathlessLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_pathlessLayout': {
      id: '/_pathlessLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PathlessLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_pathlessLayout/': {
      id: '/_pathlessLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PathlessLayoutIndexImport
      parentRoute: typeof PathlessLayoutImport
    }
    '/_pathlessLayout/(auth)/login': {
      id: '/_pathlessLayout/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof PathlessLayoutauthLoginImport
      parentRoute: typeof PathlessLayoutImport
    }
    '/_pathlessLayout/(auth)/register': {
      id: '/_pathlessLayout/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof PathlessLayoutauthRegisterImport
      parentRoute: typeof PathlessLayoutImport
    }
  }
}

// Create and export the route tree

interface PathlessLayoutRouteChildren {
  PathlessLayoutIndexRoute: typeof PathlessLayoutIndexRoute
  PathlessLayoutauthLoginRoute: typeof PathlessLayoutauthLoginRoute
  PathlessLayoutauthRegisterRoute: typeof PathlessLayoutauthRegisterRoute
}

const PathlessLayoutRouteChildren: PathlessLayoutRouteChildren = {
  PathlessLayoutIndexRoute: PathlessLayoutIndexRoute,
  PathlessLayoutauthLoginRoute: PathlessLayoutauthLoginRoute,
  PathlessLayoutauthRegisterRoute: PathlessLayoutauthRegisterRoute,
}

const PathlessLayoutRouteWithChildren = PathlessLayoutRoute._addFileChildren(
  PathlessLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof PathlessLayoutRouteWithChildren
  '/': typeof PathlessLayoutIndexRoute
  '/login': typeof PathlessLayoutauthLoginRoute
  '/register': typeof PathlessLayoutauthRegisterRoute
}

export interface FileRoutesByTo {
  '/': typeof PathlessLayoutIndexRoute
  '/login': typeof PathlessLayoutauthLoginRoute
  '/register': typeof PathlessLayoutauthRegisterRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_pathlessLayout': typeof PathlessLayoutRouteWithChildren
  '/_pathlessLayout/': typeof PathlessLayoutIndexRoute
  '/_pathlessLayout/(auth)/login': typeof PathlessLayoutauthLoginRoute
  '/_pathlessLayout/(auth)/register': typeof PathlessLayoutauthRegisterRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/' | '/login' | '/register'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/register'
  id:
    | '__root__'
    | '/_pathlessLayout'
    | '/_pathlessLayout/'
    | '/_pathlessLayout/(auth)/login'
    | '/_pathlessLayout/(auth)/register'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  PathlessLayoutRoute: typeof PathlessLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  PathlessLayoutRoute: PathlessLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_pathlessLayout"
      ]
    },
    "/_pathlessLayout": {
      "filePath": "_pathlessLayout.tsx",
      "children": [
        "/_pathlessLayout/",
        "/_pathlessLayout/(auth)/login",
        "/_pathlessLayout/(auth)/register"
      ]
    },
    "/_pathlessLayout/": {
      "filePath": "_pathlessLayout/index.tsx",
      "parent": "/_pathlessLayout"
    },
    "/_pathlessLayout/(auth)/login": {
      "filePath": "_pathlessLayout/(auth)/login.tsx",
      "parent": "/_pathlessLayout"
    },
    "/_pathlessLayout/(auth)/register": {
      "filePath": "_pathlessLayout/(auth)/register.tsx",
      "parent": "/_pathlessLayout"
    }
  }
}
ROUTE_MANIFEST_END */
